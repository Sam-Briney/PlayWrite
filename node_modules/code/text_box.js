var window, document, $, project, frame, misc, draw, pdf_ctx;
var construct = require("code/construct.js"),
	child_process = require("child_process");

var startpos;

var drag_obj = {
	containment: "#canvas",
	start: function(){
		var index = $(this).attr("id");
		index = parseInt(index.substring(9), 10);

		startpos = {
			x: project.frames[frame.index].text_boxes[index].position.x,
			y: project.frames[frame.index].text_boxes[index].position.y
		}
	},
	drag: function(e, ui){
		var index = $(this).attr("id");
		index = parseInt(index.substring(9), 10);
		project.frames[frame.index].text_boxes[index].position = {
			x: ui.position.left,
			y: ui.position.top
		}
		global.draw = false;
	},
	stop: function(){
		var index = $(this).attr("id");
		index = parseInt(index.substring(9), 10);

		global.actions.push(new construct.action({
			type: "move_text_box",
			frame_index: frame.index,
			index: index,
			old: {
				x: startpos.x,
				y: startpos.y
			}
		}));

		draw.current_frame(frame.index, pdf_ctx, project.frames[frame.index], document);
	}
}

var resize_obj = {
	containment: "#canvas",
	minWidth: 45,
	start: function(){
		var index = $(this).attr("id");
		index = parseInt(index.substring(9), 10);

		startpos = {
			x: project.frames[frame.index].text_boxes[index].size.width,
			y: project.frames[frame.index].text_boxes[index].size.height
		}
	},
	resize: function(e, ui){
		$(".text_box textarea").trigger("input");
		global.draw = false;
	},
	stop: function(){
		var index = $(this).attr("id");
		index = parseInt(index.substring(9), 10);

		global.actions.push(new construct.action({
			type: "resize_text_box",
			frame_index: frame.index,
			index: index,
			old: {
				width: startpos.x,
				height: startpos.y
			}
		}));

		draw.current_frame(frame.index, pdf_ctx, project.frames[frame.index], document);
	}
}

exports.run = function(win, doc, JQ, proj, fr, mi, dr){
	window = win;
	document = doc;
	$ = JQ;
	project = proj;
	frame = fr;
	misc = mi;
	draw = dr;

	pdf_ctx = document.getElementById("pdf_canvas").getContext("2d");

	$("#new_text_box").click(function(){
		$(".text_box").zIndex(50);

		$("<div id='text_box_" + project.frames[frame.index].text_boxes.length + "' class='text_box'>\
			<img class='text_box_delete hidden' src='resources/images/delete_text_box.png' />\
			<textarea placeholder='Text Box'></textarea>\
		</div>").appendTo("#text_box_contain").css({
			position: "absolute",
			zIndex: 100
		});

		$(".text_box").draggable(drag_obj);
		$(".text_box").resizable(resize_obj);

		$("#text_box_" + project.frames[frame.index].text_boxes.length + " textarea").focus();

		project.frames[frame.index].text_box_index = project.frames[frame.index].text_boxes.length;
		project.frames[frame.index].text_boxes.push(new construct.text_box());

		global.actions.push(new construct.action({
			type: "new_text_box",
			frame_index: frame.index
		}));

		$(".text_box textarea").autogrow({}, project, frame, misc, document, draw);

		misc.saved = false;
	});

	$("#text_box_contain").on("focus", ".text_box textarea", function(){
		var that = this;
		$(that).parent().attr("data-tb_focus", "true");
	});

	$("#text_box_contain").on("blur", ".text_box textarea", function(){
		var that = this;
		$(that).parent().attr("data-tb_focus", "false");
	});

	$("#text_box_contain").on("mousedown", ".text_box", function(e){
		$(".text_box").zIndex(50);
		$(this).zIndex(100);
		project.frames[frame.index].text_box_index = parseInt($(this).attr("id").substring(9), 10);
	});

	$("#text_box_contain").on("touchstart", ".text_box textarea", function(e){
		child_process.spawn('cmd', ['/c','C:\\Program Files\\Common Files\\microsoft shared\\ink\\TabTip.exe']);
	});

	$("#text_box_contain").on("mouseup", ".text_box img", function(e){
		var index = $(this).parent().attr("id");
		index = parseInt(index.substring(9), 10);

		global.actions.push(new construct.action({
			type: "delete_text_box",
			frame_index: frame.index,
			index: index,
			text_box: project.frames[frame.index].text_boxes[index]
		}));

		project.frames[frame.index].text_box_index = 0;
		project.frames[frame.index].text_boxes.splice(index, 1);

		$(this).parent().remove();
		draw.current_frame(frame.index, pdf_ctx, project.frames[frame.index], document);
	});

}

exports.reset = function(){
	$("#text_box_contain").unbind("input paste");
	$("#text_box_contain").empty();

	for(i=0; i<project.frames[frame.index].text_boxes.length; i++){
		$("<div id='text_box_" + i + "'	class='text_box'>\
			<img class='text_box_delete hidden' src='resources/images/delete_text_box.png' />\
			<textarea placeholder='Text Box'>" + project.frames[frame.index].text_boxes[i].text + "</textarea>\
		</div>").appendTo("#text_box_contain").css({
			top: project.frames[frame.index].text_boxes[i].position.y,
			left: project.frames[frame.index].text_boxes[i].position.x,
			width: project.frames[frame.index].text_boxes[i].size.width,
			height: project.frames[frame.index].text_boxes[i].size.height,
			position: "absolute"
		});
	}

	$(".text_box").draggable(drag_obj);
	$(".text_box").resizable(resize_obj);

	$(".text_box textarea").autogrow({}, project, frame, misc, document, draw);

	$(".text_box").zIndex(50);
	$("#text_box_" + project.frames[frame.index].text_box_index).zIndex(100);
}
