var frame_select, 
	sortable,
	fs = require("fs"),
	BSON = require("buffalo");
	
exports.index = 0;

exports.run = function(window, document, $, project, misc, draw, BSON){

	var canvas = document.getElementById("canvas"),
		context = canvas.getContext("2d");

	function frame_select(id){
		frame.index = parseInt(id.substring(6), 10);
		
		$("#frame_" + frame.index).scrollintoview({
			duration: 100
		});
		
		if(project.frames[frame.index].full_court === true){
			$(".court_setting").removeClass("court_select");
			$("#full_court").mouseenter();
			$("#full_court").addClass("court_select");
		}
		else{
			$(".court_setting").removeClass("court_select");
			$("#half_court").mouseenter();
			$("#half_court").addClass("court_select");
		}
		if(project.frames[frame.index].outside_lines === true){
			$(".bound_setting").removeClass("bound_select");
			$("#bound").mouseenter();
			$("#bound").addClass("bound_select");
		}
		else{
			$(".bound_setting").removeClass("bound_select");
			$("#no_bound").mouseenter();
			$("#no_bound").addClass("bound_select");
		}
		draw.log(context, document, project.frames[frame.index]);
		$("#frame_name").val($("#frame_" + frame.index).text());
		
	}
	
	function sortable(){
		
		$("#frame_select").multisortable({
			selectedClass:"frame_selected",
			stop:function(){
				var that = this;
				var i = 0;
				$(".frame").each(function(){
					var index = parseInt($(that).attr("id").substring(6), 10);
					project.frames[index].order = i;
					
					if(index === frame.index){
						frame.index = i;
					}
					
					$(that).attr("id", "frame_" + i);
					i++;
				});
				
				project.frames.sort(function(a, b){
					return a.order-b.order;
				});
				
				for(i=0; i<project.frames.length; i++){
					delete project.frames[i].order;
				}
				
			}
			
		});
		
		misc.saved = false;
		
	}
	sortable();
	
	misc.saved = true;
	
	//frames
	/* (function(){
		
		$("#frame_select").on("mousedown", ".frame", function(){
			frame_select($(this).attr("id"));
		});
		
		$("#add_frame").click(function(){
			
			for(i=project.frames.length - 1; i>frame.index; i--){
				project.frames[i+1] = project.frames[i];
				$("#frame_" + i).attr("id", "frame_" + (i+1));
			}
			frame.index++;
			project.frames[frame.index] = {
				name:$("#frame_name").val(),
				full_court:project.frames[frame.index - 1].full_court,
				outside_lines:project.frames[frame.index - 1].outside_lines,
				line_arr:[]
			};
			draw.log(context, document, project.frames[frame.index]);
			
			$("#frame_" + (frame.index-1)).after("<li class='frame' id='frame_" + frame.index + "'>" + "<img src='" + context.canvas.toDataURL("image/png") + "'/></br><span>" + $("#frame_name").val() + "</span></li>");
			
			$(".frame").removeClass("frame_selected");
			$("#frame_" + frame.index).addClass("frame_selected");
			
			sortable();
		});
		
		$("#frame_name").keyup(function(){
			
			$(".frame_selected span").text($("#frame_name").val());
			var v = $("#frame_name").val();
			$(".frame_selected").each(function(){
				project.frames[parseInt($(this).attr("id").substring(6), 10)].name = v;
			});
			
			misc.saved = false;
		});
		
		$("#frame_rename").on("dialogopen", function(){
			$("#frame_name").val(project.frames[frame.index].name);
			$("#frame_name").select();
		});
		
		$("#delete_frame").click(function(){
			
			$(".frame_selected").each(function(){
				var index = parseInt($(this).attr("id").substring(6), 10);
				project.frames[index].del = true;
			});
			
			project.frames = project.frames.filter(function(obj){
				return obj.del !== true;
			});
			
			if(project.frames.length < 1){
				project.frames[0] = {
					name:"New Frame",
					full_court:false,
					outside_lines:false,
					line_arr:[]
				};
			}
			
			if(frame.index > (project.frames.length - 1)){
				frame.index = project.frames.length - 1;
			}
			
			$(".frame").remove();
			
			var pdf_canvas = document.getElementById("pdf_canvas");
			var pdf_ctx = pdf_canvas.getContext("2d");
			
			for(i=0; i<project.frames.length; i++){
				draw.log(pdf_ctx, document, project.frames[i]);
				$("#frame_select").append("<li class='frame' id='frame_" + i + "'>" + "<img src='" + pdf_canvas.toDataURL("image/png") + "'/></br><span>" + project.frames[i].name + "</span></li>");
			}
			
			$("#frame_" + frame.index).mousedown().click();
			
			sortable();
			
		});
		
		$("#paste").click(function(){
			
			var bson = fs.readFileSync("temp/clipboard.bson");
			
			var data = BSON.parse(bson);
			
			data.frames.reverse();
			for(i=0; i<data.frames.length; i++){
				project.frames.splice((frame.index + 1), 0, data.frames[i]);
			}
			
			$(".frame").remove();
			
			var pdf_canvas = document.getElementById("pdf_canvas");
			var pdf_ctx = pdf_canvas.getContext("2d");
			
			for(i=0; i<project.frames.length; i++){
				draw.log(pdf_ctx, document, project.frames[i]);
				$("#frame_select").append("<li class='frame' id='frame_" + i + "'>" + "<img src='" + pdf_canvas.toDataURL("image/png") + "'/></br><span>" + project.frames[i].name + "</span></li>");
			}
			
			sortable();
			
			$("#frame_" + frame.index).mousedown().click();
			
		});
	
	})(); */

};

exports.select = frame_select;
exports.sortable = sortable;